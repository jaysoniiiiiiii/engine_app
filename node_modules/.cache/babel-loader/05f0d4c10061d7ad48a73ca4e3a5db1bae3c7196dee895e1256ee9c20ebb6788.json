{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*#__PURE__*/function (_PointerInteraction) {\n  _inherits(DragRotate, _PointerInteraction);\n  var _super = _createSuper(DragRotate);\n  /**\n   * @param {Options} [options] Options.\n   */\n  function DragRotate(options) {\n    var _this;\n    _classCallCheck(this, DragRotate);\n    options = options ? options : {};\n    _this = _super.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    _this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 250;\n    return _this;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  _createClass(DragRotate, [{\n    key: \"handleDragEvent\",\n    value: function handleDragEvent(mapBrowserEvent) {\n      if (!mouseOnly(mapBrowserEvent)) {\n        return;\n      }\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      if (view.getConstraints().rotation === disable) {\n        return;\n      }\n      var size = map.getSize();\n      var offset = mapBrowserEvent.pixel;\n      var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n      if (this.lastAngle_ !== undefined) {\n        var delta = theta - this.lastAngle_;\n        view.adjustRotationInternal(-delta);\n      }\n      this.lastAngle_ = theta;\n    }\n\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n  }, {\n    key: \"handleUpEvent\",\n    value: function handleUpEvent(mapBrowserEvent) {\n      if (!mouseOnly(mapBrowserEvent)) {\n        return true;\n      }\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n  }, {\n    key: \"handleDownEvent\",\n    value: function handleDownEvent(mapBrowserEvent) {\n      if (!mouseOnly(mapBrowserEvent)) {\n        return false;\n      }\n      if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n        var map = mapBrowserEvent.map;\n        map.getView().beginInteraction();\n        this.lastAngle_ = undefined;\n        return true;\n      }\n      return false;\n    }\n  }]);\n  return DragRotate;\n}(PointerInteraction);\nexport default DragRotate;","map":{"version":3,"names":["PointerInteraction","FALSE","altShiftKeysOnly","mouseActionButton","mouseOnly","disable","DragRotate","_PointerInteraction","_inherits","_super","_createSuper","options","_this","_classCallCheck","call","stopDown","condition_","condition","lastAngle_","undefined","duration_","duration","_createClass","key","value","handleDragEvent","mapBrowserEvent","map","view","getView","getConstraints","rotation","size","getSize","offset","pixel","theta","Math","atan2","delta","adjustRotationInternal","handleUpEvent","endInteraction","handleDownEvent","beginInteraction"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/interaction/DragRotate.js"],"sourcesContent":["/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}