{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*#__PURE__*/function (_Interaction) {\n  _inherits(KeyboardZoom, _Interaction);\n  var _super = _createSuper(KeyboardZoom);\n  /**\n   * @param {Options} [options] Options.\n   */\n  function KeyboardZoom(options) {\n    var _this;\n    _classCallCheck(this, KeyboardZoom);\n    _this = _super.call(this);\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    _this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 100;\n    return _this;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  _createClass(KeyboardZoom, [{\n    key: \"handleEvent\",\n    value: function handleEvent(mapBrowserEvent) {\n      var stopEvent = false;\n      if (mapBrowserEvent.type == EventType.KEYDOWN || mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */\n        mapBrowserEvent.originalEvent;\n        var key = keyEvent.key;\n        if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n          var map = mapBrowserEvent.map;\n          var delta = key === '+' ? this.delta_ : -this.delta_;\n          var view = map.getView();\n          zoomByDelta(view, delta, undefined, this.duration_);\n          keyEvent.preventDefault();\n          stopEvent = true;\n        }\n      }\n      return !stopEvent;\n    }\n  }]);\n  return KeyboardZoom;\n}(Interaction);\nexport default KeyboardZoom;","map":{"version":3,"names":["EventType","Interaction","zoomByDelta","targetNotEditable","KeyboardZoom","_Interaction","_inherits","_super","_createSuper","options","_this","_classCallCheck","call","condition_","condition","delta_","delta","duration_","duration","undefined","_createClass","key","value","handleEvent","mapBrowserEvent","stopEvent","type","KEYDOWN","KEYPRESS","keyEvent","originalEvent","map","view","getView","preventDefault"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/interaction/KeyboardZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n"],"mappings":";;;;AAAA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,IAAGC,WAAW,QAAO,kBAAkB;AACzD,SAAQC,iBAAiB,QAAO,wBAAwB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,IAaMC,YAAY,0BAAAC,YAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAChB;AACF;AACA;EACE,SAAAA,aAAYK,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,YAAA;IACnBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IAEAH,OAAO,GAAGA,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC;;IAEhC;AACJ;AACA;AACA;IACIC,KAAA,CAAKG,UAAU,GAAGJ,OAAO,CAACK,SAAS,GAAGL,OAAO,CAACK,SAAS,GAAGX,iBAAiB;;IAE3E;AACJ;AACA;AACA;IACIO,KAAA,CAAKK,MAAM,GAAGN,OAAO,CAACO,KAAK,GAAGP,OAAO,CAACO,KAAK,GAAG,CAAC;;IAE/C;AACJ;AACA;AACA;IACIN,KAAA,CAAKO,SAAS,GAAGR,OAAO,CAACS,QAAQ,KAAKC,SAAS,GAAGV,OAAO,CAACS,QAAQ,GAAG,GAAG;IAAC,OAAAR,KAAA;EAC3E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANEU,YAAA,CAAAhB,YAAA;IAAAiB,GAAA;IAAAC,KAAA,EAOA,SAAAC,YAAYC,eAAe,EAAE;MAC3B,IAAIC,SAAS,GAAG,KAAK;MACrB,IACED,eAAe,CAACE,IAAI,IAAI1B,SAAS,CAAC2B,OAAO,IACzCH,eAAe,CAACE,IAAI,IAAI1B,SAAS,CAAC4B,QAAQ,EAC1C;QACA,IAAMC,QAAQ,GAAG;QACfL,eAAe,CAACM,aACjB;QACD,IAAMT,GAAG,GAAGQ,QAAQ,CAACR,GAAG;QACxB,IAAI,IAAI,CAACR,UAAU,CAACW,eAAe,CAAC,KAAKH,GAAG,KAAK,GAAG,IAAIA,GAAG,KAAK,GAAG,CAAC,EAAE;UACpE,IAAMU,GAAG,GAAGP,eAAe,CAACO,GAAG;UAC/B,IAAMf,KAAK,GAAGK,GAAG,KAAK,GAAG,GAAG,IAAI,CAACN,MAAM,GAAG,CAAC,IAAI,CAACA,MAAM;UACtD,IAAMiB,IAAI,GAAGD,GAAG,CAACE,OAAO,EAAE;UAC1B/B,WAAW,CAAC8B,IAAI,EAAEhB,KAAK,EAAEG,SAAS,EAAE,IAAI,CAACF,SAAS,CAAC;UACnDY,QAAQ,CAACK,cAAc,EAAE;UACzBT,SAAS,GAAG,IAAI;QAClB;MACF;MACA,OAAO,CAACA,SAAS;IACnB;EAAC;EAAA,OAAArB,YAAA;AAAA,EAvDwBH,WAAW;AA0DtC,eAAeG,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}