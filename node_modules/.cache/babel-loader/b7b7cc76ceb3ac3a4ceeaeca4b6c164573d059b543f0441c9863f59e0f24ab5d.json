{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /*#__PURE__*/function (_Tile) {\n  _inherits(VectorTile, _Tile);\n  var _super = _createSuper(VectorTile);\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, options) {\n    var _this;\n    _classCallCheck(this, VectorTile);\n    _this = _super.call(this, tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    _this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    _this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    _this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    _this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    _this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    _this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    _this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.url_ = src;\n    _this.key = src;\n    return _this;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  _createClass(VectorTile, [{\n    key: \"getFormat\",\n    value: function getFormat() {\n      return this.format_;\n    }\n\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      return this.features_;\n    }\n\n    /**\n     * Load not yet loaded URI.\n     */\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (this.state == TileState.IDLE) {\n        this.setState(TileState.LOADING);\n        this.tileLoadFunction_(this, this.url_);\n        if (this.loader_) {\n          this.loader_(this.extent, this.resolution, this.projection);\n        }\n      }\n    }\n\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n  }, {\n    key: \"onLoad\",\n    value: function onLoad(features, dataProjection) {\n      this.setFeatures(features);\n    }\n\n    /**\n     * Handler for tile load errors.\n     */\n  }, {\n    key: \"onError\",\n    value: function onError() {\n      this.setState(TileState.ERROR);\n    }\n\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n  }, {\n    key: \"setFeatures\",\n    value: function setFeatures(features) {\n      this.features_ = features;\n      this.setState(TileState.LOADED);\n    }\n\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n  }, {\n    key: \"setLoader\",\n    value: function setLoader(loader) {\n      this.loader_ = loader;\n    }\n  }]);\n  return VectorTile;\n}(Tile);\nexport default VectorTile;","map":{"version":3,"names":["Tile","TileState","VectorTile","_Tile","_inherits","_super","_createSuper","tileCoord","state","src","format","tileLoadFunction","options","_this","_classCallCheck","call","extent","format_","features_","loader_","projection","resolution","tileLoadFunction_","url_","key","_createClass","value","getFormat","getFeatures","load","IDLE","setState","LOADING","onLoad","features","dataProjection","setFeatures","onError","ERROR","LOADED","setLoader","loader"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/VectorTile.js"],"sourcesContent":["/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}