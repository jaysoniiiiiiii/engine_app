{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /*#__PURE__*/function () {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  function Kinetic(decay, minVelocity, delay) {\n    _classCallCheck(this, Kinetic);\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  _createClass(Kinetic, [{\n    key: \"begin\",\n    value: function begin() {\n      this.points_.length = 0;\n      this.angle_ = 0;\n      this.initialVelocity_ = 0;\n    }\n\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n  }, {\n    key: \"update\",\n    value: function update(x, y) {\n      this.points_.push(x, y, Date.now());\n    }\n\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this.points_.length < 6) {\n        // at least 2 points are required (i.e. there must be at least 6 elements\n        // in the array)\n        return false;\n      }\n      var delay = Date.now() - this.delay_;\n      var lastIndex = this.points_.length - 3;\n      if (this.points_[lastIndex + 2] < delay) {\n        // the last tracked point is too old, which means that the user stopped\n        // panning before releasing the map\n        return false;\n      }\n\n      // get the first point which still falls into the delay time\n      var firstIndex = lastIndex - 3;\n      while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n        firstIndex -= 3;\n      }\n      var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n      // we don't want a duration of 0 (divide by zero)\n      // we also make sure the user panned for a duration of at least one frame\n      // (1/60s) to compute sane displacement values\n      if (duration < 1000 / 60) {\n        return false;\n      }\n      var dx = this.points_[lastIndex] - this.points_[firstIndex];\n      var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n      this.angle_ = Math.atan2(dy, dx);\n      this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n      return this.initialVelocity_ > this.minVelocity_;\n    }\n\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n  }, {\n    key: \"getDistance\",\n    value: function getDistance() {\n      return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    }\n\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n  }, {\n    key: \"getAngle\",\n    value: function getAngle() {\n      return this.angle_;\n    }\n  }]);\n  return Kinetic;\n}();\nexport default Kinetic;","map":{"version":3,"names":["Kinetic","decay","minVelocity","delay","_classCallCheck","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","_createClass","key","value","begin","length","update","x","y","push","Date","now","end","lastIndex","firstIndex","duration","dx","dy","Math","atan2","sqrt","getDistance","getAngle"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/Kinetic.js"],"sourcesContent":["/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}