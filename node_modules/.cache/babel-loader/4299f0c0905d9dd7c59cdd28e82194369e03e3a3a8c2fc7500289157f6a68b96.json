{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty as _isEmpty } from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /*#__PURE__*/function () {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  function RBush(maxEntries) {\n    _classCallCheck(this, RBush);\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  _createClass(RBush, [{\n    key: \"insert\",\n    value: function insert(extent, value) {\n      /** @type {Entry} */\n      var item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value\n      };\n      this.rbush_.insert(item);\n      this.items_[getUid(value)] = item;\n    }\n\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n  }, {\n    key: \"load\",\n    value: function load(extents, values) {\n      var items = new Array(values.length);\n      for (var i = 0, l = values.length; i < l; i++) {\n        var extent = extents[i];\n        var value = values[i];\n\n        /** @type {Entry} */\n        var item = {\n          minX: extent[0],\n          minY: extent[1],\n          maxX: extent[2],\n          maxY: extent[3],\n          value: value\n        };\n        items[i] = item;\n        this.items_[getUid(value)] = item;\n      }\n      this.rbush_.load(items);\n    }\n\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(value) {\n      var uid = getUid(value);\n\n      // get the object in which the value was wrapped when adding to the\n      // internal rbush. then use that object to do the removal.\n      var item = this.items_[uid];\n      delete this.items_[uid];\n      return this.rbush_.remove(item) !== null;\n    }\n\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n  }, {\n    key: \"update\",\n    value: function update(extent, value) {\n      var item = this.items_[getUid(value)];\n      var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n      if (!equals(bbox, extent)) {\n        this.remove(value);\n        this.insert(extent, value);\n      }\n    }\n\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var items = this.rbush_.all();\n      return items.map(function (item) {\n        return item.value;\n      });\n    }\n\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n  }, {\n    key: \"getInExtent\",\n    value: function getInExtent(extent) {\n      /** @type {Entry} */\n      var bbox = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3]\n      };\n      var items = this.rbush_.search(bbox);\n      return items.map(function (item) {\n        return item.value;\n      });\n    }\n\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      return this.forEach_(this.getAll(), callback);\n    }\n\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n  }, {\n    key: \"forEachInExtent\",\n    value: function forEachInExtent(extent, callback) {\n      return this.forEach_(this.getInExtent(extent), callback);\n    }\n\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n  }, {\n    key: \"forEach_\",\n    value: function forEach_(values, callback) {\n      var result;\n      for (var i = 0, l = values.length; i < l; i++) {\n        result = callback(values[i]);\n        if (result) {\n          return result;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * @return {boolean} Is empty.\n     */\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return _isEmpty(this.items_);\n    }\n\n    /**\n     * Remove all values from the RBush.\n     */\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.rbush_.clear();\n      this.items_ = {};\n    }\n\n    /**\n     * @param {import(\"../extent.js\").Extent} [extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n  }, {\n    key: \"getExtent\",\n    value: function getExtent(extent) {\n      var data = this.rbush_.toJSON();\n      return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n    }\n\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n  }, {\n    key: \"concat\",\n    value: function concat(rbush) {\n      this.rbush_.load(rbush.rbush_.all());\n      for (var i in rbush.items_) {\n        this.items_[i] = rbush.items_[i];\n      }\n    }\n  }]);\n  return RBush;\n}();\nexport default RBush;","map":{"version":3,"names":["RBush_","createOrUpdate","equals","getUid","isEmpty","RBush","maxEntries","_classCallCheck","rbush_","items_","_createClass","key","value","insert","extent","item","minX","minY","maxX","maxY","load","extents","values","items","Array","length","i","l","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","forEach_","forEachInExtent","result","clear","getExtent","data","toJSON","concat","rbush"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/structs/RBush.js"],"sourcesContent":["/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}