{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /*#__PURE__*/function (_EventTarget) {\n  _inherits(Observable, _EventTarget);\n  var _super = _createSuper(Observable);\n  function Observable() {\n    var _this;\n    _classCallCheck(this, Observable);\n    _this = _super.call(this);\n    _this.on = /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */\n    _this.onInternal;\n    _this.once = /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */\n    _this.onceInternal;\n    _this.un = /** @type {ObservableOnSignature<void>} */_this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.revision_ = 0;\n    return _this;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  _createClass(Observable, [{\n    key: \"changed\",\n    value: function changed() {\n      ++this.revision_;\n      this.dispatchEvent(EventType.CHANGE);\n    }\n\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n  }, {\n    key: \"getRevision\",\n    value: function getRevision() {\n      return this.revision_;\n    }\n\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n  }, {\n    key: \"onInternal\",\n    value: function onInternal(type, listener) {\n      if (Array.isArray(type)) {\n        var len = type.length;\n        var keys = new Array(len);\n        for (var i = 0; i < len; ++i) {\n          keys[i] = listen(this, type[i], listener);\n        }\n        return keys;\n      }\n      return listen(this, /** @type {string} */type, listener);\n    }\n\n    /**\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n     * @protected\n     */\n  }, {\n    key: \"onceInternal\",\n    value: function onceInternal(type, listener) {\n      var key;\n      if (Array.isArray(type)) {\n        var len = type.length;\n        key = new Array(len);\n        for (var i = 0; i < len; ++i) {\n          key[i] = listenOnce(this, type[i], listener);\n        }\n      } else {\n        key = listenOnce(this, /** @type {string} */type, listener);\n      }\n      /** @type {Object} */\n      listener.ol_key = key;\n      return key;\n    }\n\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type Type.\n     * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n     * @protected\n     */\n  }, {\n    key: \"unInternal\",\n    value: function unInternal(type, listener) {\n      var key = /** @type {Object} */listener.ol_key;\n      if (key) {\n        unByKey(key);\n      } else if (Array.isArray(type)) {\n        for (var i = 0, ii = type.length; i < ii; ++i) {\n          this.removeEventListener(type[i], listener);\n        }\n      } else {\n        this.removeEventListener(type, listener);\n      }\n    }\n  }]);\n  return Observable;\n}(EventTarget);\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey( /** @type {import(\"./events.js\").EventsKey} */key);\n  }\n}\nexport default Observable;","map":{"version":3,"names":["EventTarget","EventType","listen","listenOnce","unlistenByKey","Observable","_EventTarget","_inherits","_super","_createSuper","_this","_classCallCheck","call","on","onInternal","once","onceInternal","un","unInternal","revision_","_createClass","key","value","changed","dispatchEvent","CHANGE","getRevision","type","listener","Array","isArray","len","length","keys","i","ol_key","unByKey","ii","removeEventListener","prototype"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/Observable.js"],"sourcesContent":["/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}