{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /*#__PURE__*/function (_LRUCache) {\n  _inherits(TileCache, _LRUCache);\n  var _super = _createSuper(TileCache);\n  function TileCache() {\n    _classCallCheck(this, TileCache);\n    return _super.apply(this, arguments);\n  }\n  _createClass(TileCache, [{\n    key: \"clear\",\n    value: function clear() {\n      while (this.getCount() > 0) {\n        this.pop().release();\n      }\n      _get(_getPrototypeOf(TileCache.prototype), \"clear\", this).call(this);\n    }\n\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n  }, {\n    key: \"expireCache\",\n    value: function expireCache(usedTiles) {\n      while (this.canExpireCache()) {\n        var tile = this.peekLast();\n        if (tile.getKey() in usedTiles) {\n          break;\n        } else {\n          this.pop().release();\n        }\n      }\n    }\n\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n  }, {\n    key: \"pruneExceptNewestZ\",\n    value: function pruneExceptNewestZ() {\n      var _this = this;\n      if (this.getCount() === 0) {\n        return;\n      }\n      var key = this.peekFirstKey();\n      var tileCoord = fromKey(key);\n      var z = tileCoord[0];\n      this.forEach(function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          _this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      });\n    }\n  }]);\n  return TileCache;\n}(LRUCache);\nexport default TileCache;","map":{"version":3,"names":["LRUCache","fromKey","getKey","TileCache","_LRUCache","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","clear","getCount","pop","release","_get","_getPrototypeOf","prototype","call","expireCache","usedTiles","canExpireCache","tile","peekLast","pruneExceptNewestZ","_this","peekFirstKey","tileCoord","z","forEach","remove"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/TileCache.js"],"sourcesContent":["/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,SAAQC,OAAO,EAAEC,MAAM,QAAO,gBAAgB;AAAC,IAEzCC,SAAS,0BAAAC,SAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,SAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAAA,SAAAA,UAAA;IAAAK,eAAA,OAAAL,SAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,SAAA;IAAAS,GAAA;IAAAC,KAAA,EACb,SAAAC,MAAA,EAAQ;MACN,OAAO,IAAI,CAACC,QAAQ,EAAE,GAAG,CAAC,EAAE;QAC1B,IAAI,CAACC,GAAG,EAAE,CAACC,OAAO,EAAE;MACtB;MACAC,IAAA,CAAAC,eAAA,CAAAhB,SAAA,CAAAiB,SAAA,kBAAAC,IAAA;IACF;;IAEA;AACF;AACA;EAFE;IAAAT,GAAA;IAAAC,KAAA,EAGA,SAAAS,YAAYC,SAAS,EAAE;MACrB,OAAO,IAAI,CAACC,cAAc,EAAE,EAAE;QAC5B,IAAMC,IAAI,GAAG,IAAI,CAACC,QAAQ,EAAE;QAC5B,IAAID,IAAI,CAACvB,MAAM,EAAE,IAAIqB,SAAS,EAAE;UAC9B;QACF,CAAC,MAAM;UACL,IAAI,CAACP,GAAG,EAAE,CAACC,OAAO,EAAE;QACtB;MACF;IACF;;IAEA;AACF;AACA;EAFE;IAAAL,GAAA;IAAAC,KAAA,EAGA,SAAAc,mBAAA,EAAqB;MAAA,IAAAC,KAAA;MACnB,IAAI,IAAI,CAACb,QAAQ,EAAE,KAAK,CAAC,EAAE;QACzB;MACF;MACA,IAAMH,GAAG,GAAG,IAAI,CAACiB,YAAY,EAAE;MAC/B,IAAMC,SAAS,GAAG7B,OAAO,CAACW,GAAG,CAAC;MAC9B,IAAMmB,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC;MACtB,IAAI,CAACE,OAAO,CAAC,UAACP,IAAI,EAAK;QACrB,IAAIA,IAAI,CAACK,SAAS,CAAC,CAAC,CAAC,KAAKC,CAAC,EAAE;UAC3BH,KAAI,CAACK,MAAM,CAAC/B,MAAM,CAACuB,IAAI,CAACK,SAAS,CAAC,CAAC;UACnCL,IAAI,CAACR,OAAO,EAAE;QAChB;MACF,CAAC,CAAC;IACJ;EAAC;EAAA,OAAAd,SAAA;AAAA,EAtCqBH,QAAQ;AAyChC,eAAeG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}