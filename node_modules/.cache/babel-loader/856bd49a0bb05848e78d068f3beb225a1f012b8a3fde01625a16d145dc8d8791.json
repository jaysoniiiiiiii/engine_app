{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /*#__PURE__*/function (_CanvasBuilder) {\n  _inherits(CanvasLineStringBuilder, _CanvasBuilder);\n  var _super = _createSuper(CanvasLineStringBuilder);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    _classCallCheck(this, CanvasLineStringBuilder);\n    return _super.call(this, tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  _createClass(CanvasLineStringBuilder, [{\n    key: \"drawFlatCoordinates_\",\n    value: function drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      return end;\n    }\n\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n  }, {\n    key: \"drawLineString\",\n    value: function drawLineString(lineStringGeometry, feature) {\n      var state = this.state;\n      var strokeStyle = state.strokeStyle;\n      var lineWidth = state.lineWidth;\n      if (strokeStyle === undefined || lineWidth === undefined) {\n        return;\n      }\n      this.updateStrokeStyle(state, this.applyStroke);\n      this.beginGeometry(lineStringGeometry, feature);\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, defaultLineDash, defaultLineDashOffset], beginPathInstruction);\n      var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n      var stride = lineStringGeometry.getStride();\n      this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n      this.hitDetectionInstructions.push(strokeInstruction);\n      this.endGeometry(feature);\n    }\n\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n  }, {\n    key: \"drawMultiLineString\",\n    value: function drawMultiLineString(multiLineStringGeometry, feature) {\n      var state = this.state;\n      var strokeStyle = state.strokeStyle;\n      var lineWidth = state.lineWidth;\n      if (strokeStyle === undefined || lineWidth === undefined) {\n        return;\n      }\n      this.updateStrokeStyle(state, this.applyStroke);\n      this.beginGeometry(multiLineStringGeometry, feature);\n      this.hitDetectionInstructions.push([CanvasInstruction.SET_STROKE_STYLE, state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin, state.miterLimit, state.lineDash, state.lineDashOffset], beginPathInstruction);\n      var ends = multiLineStringGeometry.getEnds();\n      var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n      var stride = multiLineStringGeometry.getStride();\n      var offset = 0;\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.drawFlatCoordinates_(flatCoordinates, offset, /** @type {number} */ends[i], stride);\n      }\n      this.hitDetectionInstructions.push(strokeInstruction);\n      this.endGeometry(feature);\n    }\n\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      var state = this.state;\n      if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n        this.instructions.push(strokeInstruction);\n      }\n      this.reverseHitDetectionInstructions();\n      this.state = null;\n      return _get(_getPrototypeOf(CanvasLineStringBuilder.prototype), \"finish\", this).call(this);\n    }\n\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n  }, {\n    key: \"applyStroke\",\n    value: function applyStroke(state) {\n      if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n        this.instructions.push(strokeInstruction);\n        state.lastStroke = this.coordinates.length;\n      }\n      state.lastStroke = 0;\n      _get(_getPrototypeOf(CanvasLineStringBuilder.prototype), \"applyStroke\", this).call(this, state);\n      this.instructions.push(beginPathInstruction);\n    }\n  }]);\n  return CanvasLineStringBuilder;\n}(CanvasBuilder);\nexport default CanvasLineStringBuilder;","map":{"version":3,"names":["CanvasBuilder","CanvasInstruction","beginPathInstruction","strokeInstruction","defaultLineDash","defaultLineDashOffset","CanvasLineStringBuilder","_CanvasBuilder","_inherits","_super","_createSuper","tolerance","maxExtent","resolution","pixelRatio","_classCallCheck","call","_createClass","key","value","drawFlatCoordinates_","flatCoordinates","offset","end","stride","myBegin","coordinates","length","myEnd","appendFlatLineCoordinates","moveToLineToInstruction","MOVE_TO_LINE_TO","instructions","push","hitDetectionInstructions","drawLineString","lineStringGeometry","feature","state","strokeStyle","lineWidth","undefined","updateStrokeStyle","applyStroke","beginGeometry","SET_STROKE_STYLE","lineCap","lineJoin","miterLimit","getFlatCoordinates","getStride","endGeometry","drawMultiLineString","multiLineStringGeometry","lineDash","lineDashOffset","ends","getEnds","i","ii","finish","lastStroke","reverseHitDetectionInstructions","_get","_getPrototypeOf","prototype"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/render/canvas/LineStringBuilder.js"],"sourcesContent":["/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}