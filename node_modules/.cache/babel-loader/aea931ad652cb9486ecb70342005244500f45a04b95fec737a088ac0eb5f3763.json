{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /*#__PURE__*/function () {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  function TileRange(minX, maxX, minY, maxY) {\n    _classCallCheck(this, TileRange);\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  _createClass(TileRange, [{\n    key: \"contains\",\n    value: function contains(tileCoord) {\n      return this.containsXY(tileCoord[1], tileCoord[2]);\n    }\n\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n  }, {\n    key: \"containsTileRange\",\n    value: function containsTileRange(tileRange) {\n      return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX && this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    }\n\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n  }, {\n    key: \"containsXY\",\n    value: function containsXY(x, y) {\n      return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    }\n\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n  }, {\n    key: \"equals\",\n    value: function equals(tileRange) {\n      return this.minX == tileRange.minX && this.minY == tileRange.minY && this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    }\n\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n  }, {\n    key: \"extend\",\n    value: function extend(tileRange) {\n      if (tileRange.minX < this.minX) {\n        this.minX = tileRange.minX;\n      }\n      if (tileRange.maxX > this.maxX) {\n        this.maxX = tileRange.maxX;\n      }\n      if (tileRange.minY < this.minY) {\n        this.minY = tileRange.minY;\n      }\n      if (tileRange.maxY > this.maxY) {\n        this.maxY = tileRange.maxY;\n      }\n    }\n\n    /**\n     * @return {number} Height.\n     */\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      return this.maxY - this.minY + 1;\n    }\n\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return [this.getWidth(), this.getHeight()];\n    }\n\n    /**\n     * @return {number} Width.\n     */\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      return this.maxX - this.minX + 1;\n    }\n\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n  }, {\n    key: \"intersects\",\n    value: function intersects(tileRange) {\n      return this.minX <= tileRange.maxX && this.maxX >= tileRange.minX && this.minY <= tileRange.maxY && this.maxY >= tileRange.minY;\n    }\n  }]);\n  return TileRange;\n}();\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\nexport default TileRange;","map":{"version":3,"names":["TileRange","minX","maxX","minY","maxY","_classCallCheck","_createClass","key","value","contains","tileCoord","containsXY","containsTileRange","tileRange","x","y","equals","extend","getHeight","getSize","getWidth","intersects","createOrUpdate","undefined"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/TileRange.js"],"sourcesContent":["/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}