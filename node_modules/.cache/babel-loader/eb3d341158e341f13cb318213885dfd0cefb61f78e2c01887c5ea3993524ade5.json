{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { toFixed } from '../../math.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*#__PURE__*/function (_VectorContext) {\n  _inherits(CanvasImmediateRenderer, _VectorContext);\n  var _super = _createSuper(CanvasImmediateRenderer);\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, squaredTolerance, userTransform) {\n    var _this;\n    _classCallCheck(this, CanvasImmediateRenderer);\n    _this = _super.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    _this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    _this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.transformRotation_ = transform ? toFixed(Math.atan2(transform[1], transform[0]), 10) : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    _this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    _this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    _this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    _this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    _this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    _this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    _this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    _this.tmpLocalTransform_ = createTransform();\n    return _this;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  _createClass(CanvasImmediateRenderer, [{\n    key: \"drawImages_\",\n    value: function drawImages_(flatCoordinates, offset, end, stride) {\n      if (!this.image_) {\n        return;\n      }\n      var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n      var context = this.context_;\n      var localTransform = this.tmpLocalTransform_;\n      var alpha = context.globalAlpha;\n      if (this.imageOpacity_ != 1) {\n        context.globalAlpha = alpha * this.imageOpacity_;\n      }\n      var rotation = this.imageRotation_;\n      if (this.transformRotation_ === 0) {\n        rotation -= this.viewRotation_;\n      }\n      if (this.imageRotateWithView_) {\n        rotation += this.viewRotation_;\n      }\n      for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n        var x = pixelCoordinates[i] - this.imageAnchorX_;\n        var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n        if (rotation !== 0 || this.imageScale_[0] != 1 || this.imageScale_[1] != 1) {\n          var centerX = x + this.imageAnchorX_;\n          var centerY = y + this.imageAnchorY_;\n          composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n          context.setTransform.apply(context, localTransform);\n          context.translate(centerX, centerY);\n          context.scale(this.imageScale_[0], this.imageScale_[1]);\n          context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n          context.setTransform(1, 0, 0, 1, 0, 0);\n        } else {\n          context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n      }\n      if (this.imageOpacity_ != 1) {\n        context.globalAlpha = alpha;\n      }\n    }\n\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n  }, {\n    key: \"drawText_\",\n    value: function drawText_(flatCoordinates, offset, end, stride) {\n      if (!this.textState_ || this.text_ === '') {\n        return;\n      }\n      if (this.textFillState_) {\n        this.setContextFillState_(this.textFillState_);\n      }\n      if (this.textStrokeState_) {\n        this.setContextStrokeState_(this.textStrokeState_);\n      }\n      this.setContextTextState_(this.textState_);\n      var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n      var context = this.context_;\n      var rotation = this.textRotation_;\n      if (this.transformRotation_ === 0) {\n        rotation -= this.viewRotation_;\n      }\n      if (this.textRotateWithView_) {\n        rotation += this.viewRotation_;\n      }\n      for (; offset < end; offset += stride) {\n        var x = pixelCoordinates[offset] + this.textOffsetX_;\n        var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n        if (rotation !== 0 || this.textScale_[0] != 1 || this.textScale_[1] != 1) {\n          context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n          context.rotate(rotation);\n          context.translate(this.textOffsetX_, this.textOffsetY_);\n          context.scale(this.textScale_[0], this.textScale_[1]);\n          if (this.textStrokeState_) {\n            context.strokeText(this.text_, 0, 0);\n          }\n          if (this.textFillState_) {\n            context.fillText(this.text_, 0, 0);\n          }\n          context.setTransform(1, 0, 0, 1, 0, 0);\n        } else {\n          if (this.textStrokeState_) {\n            context.strokeText(this.text_, x, y);\n          }\n          if (this.textFillState_) {\n            context.fillText(this.text_, x, y);\n          }\n        }\n      }\n    }\n\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n  }, {\n    key: \"moveToLineTo_\",\n    value: function moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n      var context = this.context_;\n      var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n      context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n      var length = pixelCoordinates.length;\n      if (close) {\n        length -= 2;\n      }\n      for (var i = 2; i < length; i += 2) {\n        context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n      }\n      if (close) {\n        context.closePath();\n      }\n      return end;\n    }\n\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n  }, {\n    key: \"drawRings_\",\n    value: function drawRings_(flatCoordinates, offset, ends, stride) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n      }\n      return offset;\n    }\n\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n  }, {\n    key: \"drawCircle\",\n    value: function drawCircle(geometry) {\n      if (!intersects(this.extent_, geometry.getExtent())) {\n        return;\n      }\n      if (this.fillState_ || this.strokeState_) {\n        if (this.fillState_) {\n          this.setContextFillState_(this.fillState_);\n        }\n        if (this.strokeState_) {\n          this.setContextStrokeState_(this.strokeState_);\n        }\n        var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n        var dx = pixelCoordinates[2] - pixelCoordinates[0];\n        var dy = pixelCoordinates[3] - pixelCoordinates[1];\n        var radius = Math.sqrt(dx * dx + dy * dy);\n        var context = this.context_;\n        context.beginPath();\n        context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n        if (this.fillState_) {\n          context.fill();\n        }\n        if (this.strokeState_) {\n          context.stroke();\n        }\n      }\n      if (this.text_ !== '') {\n        this.drawText_(geometry.getCenter(), 0, 2, 2);\n      }\n    }\n\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      this.setFillStrokeStyle(style.getFill(), style.getStroke());\n      this.setImageStyle(style.getImage());\n      this.setTextStyle(style.getText());\n    }\n\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n  }, {\n    key: \"setTransform\",\n    value: function setTransform(transform) {\n      this.transform_ = transform;\n    }\n\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n  }, {\n    key: \"drawGeometry\",\n    value: function drawGeometry(geometry) {\n      var type = geometry.getType();\n      switch (type) {\n        case 'Point':\n          this.drawPoint( /** @type {import(\"../../geom/Point.js\").default} */geometry);\n          break;\n        case 'LineString':\n          this.drawLineString( /** @type {import(\"../../geom/LineString.js\").default} */geometry);\n          break;\n        case 'Polygon':\n          this.drawPolygon( /** @type {import(\"../../geom/Polygon.js\").default} */geometry);\n          break;\n        case 'MultiPoint':\n          this.drawMultiPoint( /** @type {import(\"../../geom/MultiPoint.js\").default} */geometry);\n          break;\n        case 'MultiLineString':\n          this.drawMultiLineString( /** @type {import(\"../../geom/MultiLineString.js\").default} */\n          geometry);\n          break;\n        case 'MultiPolygon':\n          this.drawMultiPolygon( /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry);\n          break;\n        case 'GeometryCollection':\n          this.drawGeometryCollection( /** @type {import(\"../../geom/GeometryCollection.js\").default} */\n          geometry);\n          break;\n        case 'Circle':\n          this.drawCircle( /** @type {import(\"../../geom/Circle.js\").default} */geometry);\n          break;\n        default:\n      }\n    }\n\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n  }, {\n    key: \"drawFeature\",\n    value: function drawFeature(feature, style) {\n      var geometry = style.getGeometryFunction()(feature);\n      if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n        return;\n      }\n      this.setStyle(style);\n      this.drawGeometry(geometry);\n    }\n\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n  }, {\n    key: \"drawGeometryCollection\",\n    value: function drawGeometryCollection(geometry) {\n      var geometries = geometry.getGeometriesArray();\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        this.drawGeometry(geometries[i]);\n      }\n    }\n\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n  }, {\n    key: \"drawPoint\",\n    value: function drawPoint(geometry) {\n      if (this.squaredTolerance_) {\n        geometry = /** @type {import(\"../../geom/Point.js\").default} */\n        geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n      }\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var stride = geometry.getStride();\n      if (this.image_) {\n        this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n      }\n      if (this.text_ !== '') {\n        this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n      }\n    }\n\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n  }, {\n    key: \"drawMultiPoint\",\n    value: function drawMultiPoint(geometry) {\n      if (this.squaredTolerance_) {\n        geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */\n        geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n      }\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var stride = geometry.getStride();\n      if (this.image_) {\n        this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n      }\n      if (this.text_ !== '') {\n        this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n      }\n    }\n\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n  }, {\n    key: \"drawLineString\",\n    value: function drawLineString(geometry) {\n      if (this.squaredTolerance_) {\n        geometry = /** @type {import(\"../../geom/LineString.js\").default} */\n        geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n      }\n      if (!intersects(this.extent_, geometry.getExtent())) {\n        return;\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n        var context = this.context_;\n        var flatCoordinates = geometry.getFlatCoordinates();\n        context.beginPath();\n        this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n        context.stroke();\n      }\n      if (this.text_ !== '') {\n        var flatMidpoint = geometry.getFlatMidpoint();\n        this.drawText_(flatMidpoint, 0, 2, 2);\n      }\n    }\n\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n  }, {\n    key: \"drawMultiLineString\",\n    value: function drawMultiLineString(geometry) {\n      if (this.squaredTolerance_) {\n        geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */\n        geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n      }\n      var geometryExtent = geometry.getExtent();\n      if (!intersects(this.extent_, geometryExtent)) {\n        return;\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n        var context = this.context_;\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var offset = 0;\n        var ends = /** @type {Array<number>} */geometry.getEnds();\n        var stride = geometry.getStride();\n        context.beginPath();\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n          offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n        }\n        context.stroke();\n      }\n      if (this.text_ !== '') {\n        var flatMidpoints = geometry.getFlatMidpoints();\n        this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n      }\n    }\n\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n  }, {\n    key: \"drawPolygon\",\n    value: function drawPolygon(geometry) {\n      if (this.squaredTolerance_) {\n        geometry = /** @type {import(\"../../geom/Polygon.js\").default} */\n        geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n      }\n      if (!intersects(this.extent_, geometry.getExtent())) {\n        return;\n      }\n      if (this.strokeState_ || this.fillState_) {\n        if (this.fillState_) {\n          this.setContextFillState_(this.fillState_);\n        }\n        if (this.strokeState_) {\n          this.setContextStrokeState_(this.strokeState_);\n        }\n        var context = this.context_;\n        context.beginPath();\n        this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */geometry.getEnds(), geometry.getStride());\n        if (this.fillState_) {\n          context.fill();\n        }\n        if (this.strokeState_) {\n          context.stroke();\n        }\n      }\n      if (this.text_ !== '') {\n        var flatInteriorPoint = geometry.getFlatInteriorPoint();\n        this.drawText_(flatInteriorPoint, 0, 2, 2);\n      }\n    }\n\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n  }, {\n    key: \"drawMultiPolygon\",\n    value: function drawMultiPolygon(geometry) {\n      if (this.squaredTolerance_) {\n        geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */\n        geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_);\n      }\n      if (!intersects(this.extent_, geometry.getExtent())) {\n        return;\n      }\n      if (this.strokeState_ || this.fillState_) {\n        if (this.fillState_) {\n          this.setContextFillState_(this.fillState_);\n        }\n        if (this.strokeState_) {\n          this.setContextStrokeState_(this.strokeState_);\n        }\n        var context = this.context_;\n        var flatCoordinates = geometry.getOrientedFlatCoordinates();\n        var offset = 0;\n        var endss = geometry.getEndss();\n        var stride = geometry.getStride();\n        context.beginPath();\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n          var ends = endss[i];\n          offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n        }\n        if (this.fillState_) {\n          context.fill();\n        }\n        if (this.strokeState_) {\n          context.stroke();\n        }\n      }\n      if (this.text_ !== '') {\n        var flatInteriorPoints = geometry.getFlatInteriorPoints();\n        this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n      }\n    }\n\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n  }, {\n    key: \"setContextFillState_\",\n    value: function setContextFillState_(fillState) {\n      var context = this.context_;\n      var contextFillState = this.contextFillState_;\n      if (!contextFillState) {\n        context.fillStyle = fillState.fillStyle;\n        this.contextFillState_ = {\n          fillStyle: fillState.fillStyle\n        };\n      } else {\n        if (contextFillState.fillStyle != fillState.fillStyle) {\n          contextFillState.fillStyle = fillState.fillStyle;\n          context.fillStyle = fillState.fillStyle;\n        }\n      }\n    }\n\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n  }, {\n    key: \"setContextStrokeState_\",\n    value: function setContextStrokeState_(strokeState) {\n      var context = this.context_;\n      var contextStrokeState = this.contextStrokeState_;\n      if (!contextStrokeState) {\n        context.lineCap = strokeState.lineCap;\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n        context.lineJoin = strokeState.lineJoin;\n        context.lineWidth = strokeState.lineWidth;\n        context.miterLimit = strokeState.miterLimit;\n        context.strokeStyle = strokeState.strokeStyle;\n        this.contextStrokeState_ = {\n          lineCap: strokeState.lineCap,\n          lineDash: strokeState.lineDash,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineJoin: strokeState.lineJoin,\n          lineWidth: strokeState.lineWidth,\n          miterLimit: strokeState.miterLimit,\n          strokeStyle: strokeState.strokeStyle\n        };\n      } else {\n        if (contextStrokeState.lineCap != strokeState.lineCap) {\n          contextStrokeState.lineCap = strokeState.lineCap;\n          context.lineCap = strokeState.lineCap;\n        }\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n        if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n          contextStrokeState.lineJoin = strokeState.lineJoin;\n          context.lineJoin = strokeState.lineJoin;\n        }\n        if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n          contextStrokeState.lineWidth = strokeState.lineWidth;\n          context.lineWidth = strokeState.lineWidth;\n        }\n        if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n          contextStrokeState.miterLimit = strokeState.miterLimit;\n          context.miterLimit = strokeState.miterLimit;\n        }\n        if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n          contextStrokeState.strokeStyle = strokeState.strokeStyle;\n          context.strokeStyle = strokeState.strokeStyle;\n        }\n      }\n    }\n\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n  }, {\n    key: \"setContextTextState_\",\n    value: function setContextTextState_(textState) {\n      var context = this.context_;\n      var contextTextState = this.contextTextState_;\n      var textAlign = textState.textAlign ? textState.textAlign : defaultTextAlign;\n      if (!contextTextState) {\n        context.font = textState.font;\n        context.textAlign = textAlign;\n        context.textBaseline = textState.textBaseline;\n        this.contextTextState_ = {\n          font: textState.font,\n          textAlign: textAlign,\n          textBaseline: textState.textBaseline\n        };\n      } else {\n        if (contextTextState.font != textState.font) {\n          contextTextState.font = textState.font;\n          context.font = textState.font;\n        }\n        if (contextTextState.textAlign != textAlign) {\n          contextTextState.textAlign = textAlign;\n          context.textAlign = textAlign;\n        }\n        if (contextTextState.textBaseline != textState.textBaseline) {\n          contextTextState.textBaseline = textState.textBaseline;\n          context.textBaseline = textState.textBaseline;\n        }\n      }\n    }\n\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n  }, {\n    key: \"setFillStrokeStyle\",\n    value: function setFillStrokeStyle(fillStyle, strokeStyle) {\n      var _this2 = this;\n      if (!fillStyle) {\n        this.fillState_ = null;\n      } else {\n        var fillStyleColor = fillStyle.getColor();\n        this.fillState_ = {\n          fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle)\n        };\n      }\n      if (!strokeStyle) {\n        this.strokeState_ = null;\n      } else {\n        var strokeStyleColor = strokeStyle.getColor();\n        var strokeStyleLineCap = strokeStyle.getLineCap();\n        var strokeStyleLineDash = strokeStyle.getLineDash();\n        var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n        var strokeStyleLineJoin = strokeStyle.getLineJoin();\n        var strokeStyleWidth = strokeStyle.getWidth();\n        var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n        var lineDash = strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash;\n        this.strokeState_ = {\n          lineCap: strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap,\n          lineDash: this.pixelRatio_ === 1 ? lineDash : lineDash.map(function (n) {\n            return n * _this2.pixelRatio_;\n          }),\n          lineDashOffset: (strokeStyleLineDashOffset ? strokeStyleLineDashOffset : defaultLineDashOffset) * this.pixelRatio_,\n          lineJoin: strokeStyleLineJoin !== undefined ? strokeStyleLineJoin : defaultLineJoin,\n          lineWidth: (strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth) * this.pixelRatio_,\n          miterLimit: strokeStyleMiterLimit !== undefined ? strokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle)\n        };\n      }\n    }\n\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n  }, {\n    key: \"setImageStyle\",\n    value: function setImageStyle(imageStyle) {\n      var imageSize;\n      if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n        this.image_ = null;\n        return;\n      }\n      var imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n      var imageAnchor = imageStyle.getAnchor();\n      var imageOrigin = imageStyle.getOrigin();\n      this.image_ = imageStyle.getImage(this.pixelRatio_);\n      this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n      this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n      this.imageHeight_ = imageSize[1] * imagePixelRatio;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      var imageScale = imageStyle.getScaleArray();\n      this.imageScale_ = [imageScale[0] * this.pixelRatio_ / imagePixelRatio, imageScale[1] * this.pixelRatio_ / imagePixelRatio];\n      this.imageWidth_ = imageSize[0] * imagePixelRatio;\n    }\n\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n  }, {\n    key: \"setTextStyle\",\n    value: function setTextStyle(textStyle) {\n      if (!textStyle) {\n        this.text_ = '';\n      } else {\n        var textFillStyle = textStyle.getFill();\n        if (!textFillStyle) {\n          this.textFillState_ = null;\n        } else {\n          var textFillStyleColor = textFillStyle.getColor();\n          this.textFillState_ = {\n            fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle)\n          };\n        }\n        var textStrokeStyle = textStyle.getStroke();\n        if (!textStrokeStyle) {\n          this.textStrokeState_ = null;\n        } else {\n          var textStrokeStyleColor = textStrokeStyle.getColor();\n          var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n          var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n          var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n          var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n          var textStrokeStyleWidth = textStrokeStyle.getWidth();\n          var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n          this.textStrokeState_ = {\n            lineCap: textStrokeStyleLineCap !== undefined ? textStrokeStyleLineCap : defaultLineCap,\n            lineDash: textStrokeStyleLineDash ? textStrokeStyleLineDash : defaultLineDash,\n            lineDashOffset: textStrokeStyleLineDashOffset ? textStrokeStyleLineDashOffset : defaultLineDashOffset,\n            lineJoin: textStrokeStyleLineJoin !== undefined ? textStrokeStyleLineJoin : defaultLineJoin,\n            lineWidth: textStrokeStyleWidth !== undefined ? textStrokeStyleWidth : defaultLineWidth,\n            miterLimit: textStrokeStyleMiterLimit !== undefined ? textStrokeStyleMiterLimit : defaultMiterLimit,\n            strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle)\n          };\n        }\n        var textFont = textStyle.getFont();\n        var textOffsetX = textStyle.getOffsetX();\n        var textOffsetY = textStyle.getOffsetY();\n        var textRotateWithView = textStyle.getRotateWithView();\n        var textRotation = textStyle.getRotation();\n        var textScale = textStyle.getScaleArray();\n        var textText = textStyle.getText();\n        var textTextAlign = textStyle.getTextAlign();\n        var textTextBaseline = textStyle.getTextBaseline();\n        this.textState_ = {\n          font: textFont !== undefined ? textFont : defaultFont,\n          textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n          textBaseline: textTextBaseline !== undefined ? textTextBaseline : defaultTextBaseline\n        };\n        this.text_ = textText !== undefined ? Array.isArray(textText) ? textText.reduce(function (acc, t, i) {\n          return acc += i % 2 ? ' ' : t;\n        }, '') : textText : '';\n        this.textOffsetX_ = textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n        this.textOffsetY_ = textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n        this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n        this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n        this.textScale_ = [this.pixelRatio_ * textScale[0], this.pixelRatio_ * textScale[1]];\n      }\n    }\n  }]);\n  return CanvasImmediateRenderer;\n}(VectorContext);\nexport default CanvasImmediateRenderer;","map":{"version":3,"names":["VectorContext","asColorLike","compose","composeTransform","create","createTransform","defaultFillStyle","defaultFont","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","equals","intersects","toFixed","transform2D","transformGeom2D","CanvasImmediateRenderer","_VectorContext","_inherits","_super","_createSuper","context","pixelRatio","extent","transform","viewRotation","squaredTolerance","userTransform","_this","_classCallCheck","call","context_","pixelRatio_","extent_","transform_","transformRotation_","Math","atan2","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","_createClass","key","value","drawImages_","flatCoordinates","offset","end","stride","pixelCoordinates","localTransform","alpha","globalAlpha","rotation","i","ii","length","x","y","centerX","centerY","setTransform","apply","translate","scale","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","rotate","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","ends","drawCircle","geometry","getExtent","dx","dy","radius","sqrt","beginPath","arc","PI","fill","stroke","getCenter","setStyle","style","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","drawGeometry","type","getType","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawFeature","feature","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","getFlatCoordinates","getStride","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","fillStyle","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","textState","contextTextState","textAlign","font","textBaseline","_this2","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","undefined","map","n","imageStyle","imageSize","getSize","imagePixelRatio","getPixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getOpacity","getRotateWithView","getRotation","imageScale","getScaleArray","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Array","isArray","reduce","acc","t"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/render/canvas/Immediate.js"],"sourcesContent":["/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}