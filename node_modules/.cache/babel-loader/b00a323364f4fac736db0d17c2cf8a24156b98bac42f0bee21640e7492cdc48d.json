{"ast":null,"code":"import _toConsumableArray from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _get from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals, wrapAndSliceX } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { isEmpty as _isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport var VectorSourceEvent = /*#__PURE__*/function (_Event) {\n  _inherits(VectorSourceEvent, _Event);\n  var _super = _createSuper(VectorSourceEvent);\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  function VectorSourceEvent(type, feature, features) {\n    var _this;\n    _classCallCheck(this, VectorSourceEvent);\n    _this = _super.call(this, type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    _this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    _this.features = features;\n    return _this;\n  }\n  return _createClass(VectorSourceEvent);\n}(Event);\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /*#__PURE__*/function (_Source) {\n  _inherits(VectorSource, _Source);\n  var _super2 = _createSuper(VectorSource);\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  function VectorSource(options) {\n    var _this2;\n    _classCallCheck(this, VectorSource);\n    options = options || {};\n    _this2 = _super2.call(this, {\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this2.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    _this2.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    _this2.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    _this2.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    _this2.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this2.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    _this2.url_ = options.url;\n    if (options.loader !== undefined) {\n      _this2.loader_ = options.loader;\n    } else if (_this2.url_ !== undefined) {\n      assert(_this2.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      _this2.loader_ = xhr(_this2.url_, /** @type {import(\"../format/Feature.js\").default} */_this2.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    _this2.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n    var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    _this2.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    _this2.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    _this2.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    _this2.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    _this2.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    _this2.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    _this2.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    _this2.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    var collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    var features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      _this2.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      _this2.bindFeaturesCollection_(collection);\n    }\n    return _this2;\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  _createClass(VectorSource, [{\n    key: \"addFeature\",\n    value: function addFeature(feature) {\n      this.addFeatureInternal(feature);\n      this.changed();\n    }\n\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n  }, {\n    key: \"addFeatureInternal\",\n    value: function addFeatureInternal(feature) {\n      var featureKey = getUid(feature);\n      if (!this.addToIndex_(featureKey, feature)) {\n        if (this.featuresCollection_) {\n          this.featuresCollection_.remove(feature);\n        }\n        return;\n      }\n      this.setupChangeEvents_(featureKey, feature);\n      var geometry = feature.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    }\n\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n  }, {\n    key: \"setupChangeEvents_\",\n    value: function setupChangeEvents_(featureKey, feature) {\n      this.featureChangeKeys_[featureKey] = [listen(feature, EventType.CHANGE, this.handleFeatureChange_, this), listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)];\n    }\n\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n  }, {\n    key: \"addToIndex_\",\n    value: function addToIndex_(featureKey, feature) {\n      var valid = true;\n      var id = feature.getId();\n      if (id !== undefined) {\n        if (!(id.toString() in this.idIndex_)) {\n          this.idIndex_[id.toString()] = feature;\n        } else {\n          valid = false;\n        }\n      }\n      if (valid) {\n        assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n        this.uidIndex_[featureKey] = feature;\n      }\n      return valid;\n    }\n\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n  }, {\n    key: \"addFeatures\",\n    value: function addFeatures(features) {\n      this.addFeaturesInternal(features);\n      this.changed();\n    }\n\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n  }, {\n    key: \"addFeaturesInternal\",\n    value: function addFeaturesInternal(features) {\n      var extents = [];\n      var newFeatures = [];\n      var geometryFeatures = [];\n      for (var i = 0, length = features.length; i < length; i++) {\n        var feature = features[i];\n        var featureKey = getUid(feature);\n        if (this.addToIndex_(featureKey, feature)) {\n          newFeatures.push(feature);\n        }\n      }\n      for (var _i = 0, _length = newFeatures.length; _i < _length; _i++) {\n        var _feature = newFeatures[_i];\n        var _featureKey = getUid(_feature);\n        this.setupChangeEvents_(_featureKey, _feature);\n        var geometry = _feature.getGeometry();\n        if (geometry) {\n          var extent = geometry.getExtent();\n          extents.push(extent);\n          geometryFeatures.push(_feature);\n        } else {\n          this.nullGeometryFeatures_[_featureKey] = _feature;\n        }\n      }\n      if (this.featuresRtree_) {\n        this.featuresRtree_.load(extents, geometryFeatures);\n      }\n      if (this.hasListener(VectorEventType.ADDFEATURE)) {\n        for (var _i2 = 0, _length2 = newFeatures.length; _i2 < _length2; _i2++) {\n          this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[_i2]));\n        }\n      }\n    }\n\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n  }, {\n    key: \"bindFeaturesCollection_\",\n    value: function bindFeaturesCollection_(collection) {\n      var _this3 = this;\n      var modifyingCollection = false;\n      this.addEventListener(VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n      this.addEventListener(VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n      collection.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          _this3.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      });\n      collection.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          _this3.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      });\n      this.featuresCollection_ = collection;\n    }\n\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n     * @api\n     */\n  }, {\n    key: \"clear\",\n    value: function clear(fast) {\n      var _this4 = this;\n      if (fast) {\n        for (var featureId in this.featureChangeKeys_) {\n          var keys = this.featureChangeKeys_[featureId];\n          keys.forEach(unlistenByKey);\n        }\n        if (!this.featuresCollection_) {\n          this.featureChangeKeys_ = {};\n          this.idIndex_ = {};\n          this.uidIndex_ = {};\n        }\n      } else {\n        if (this.featuresRtree_) {\n          var removeAndIgnoreReturn = function removeAndIgnoreReturn(feature) {\n            _this4.removeFeatureInternal(feature);\n          };\n          this.featuresRtree_.forEach(removeAndIgnoreReturn);\n          for (var id in this.nullGeometryFeatures_) {\n            this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n          }\n        }\n      }\n      if (this.featuresCollection_) {\n        this.featuresCollection_.clear();\n      }\n      if (this.featuresRtree_) {\n        this.featuresRtree_.clear();\n      }\n      this.nullGeometryFeatures_ = {};\n      var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n      this.dispatchEvent(clearEvent);\n      this.changed();\n    }\n\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n  }, {\n    key: \"forEachFeature\",\n    value: function forEachFeature(callback) {\n      if (this.featuresRtree_) {\n        return this.featuresRtree_.forEach(callback);\n      } else if (this.featuresCollection_) {\n        this.featuresCollection_.forEach(callback);\n      }\n    }\n\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n  }, {\n    key: \"forEachFeatureAtCoordinateDirect\",\n    value: function forEachFeatureAtCoordinateDirect(coordinate, callback) {\n      var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n      return this.forEachFeatureInExtent(extent, function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsCoordinate(coordinate)) {\n          return callback(feature);\n        }\n        return undefined;\n      });\n    }\n\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n  }, {\n    key: \"forEachFeatureInExtent\",\n    value: function forEachFeatureInExtent(extent, callback) {\n      if (this.featuresRtree_) {\n        return this.featuresRtree_.forEachInExtent(extent, callback);\n      } else if (this.featuresCollection_) {\n        this.featuresCollection_.forEach(callback);\n      }\n    }\n\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n  }, {\n    key: \"forEachFeatureIntersectingExtent\",\n    value: function forEachFeatureIntersectingExtent(extent, callback) {\n      return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n    }\n\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n  }, {\n    key: \"getFeaturesCollection\",\n    value: function getFeaturesCollection() {\n      return this.featuresCollection_;\n    }\n\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n  }, {\n    key: \"getFeatures\",\n    value: function getFeatures() {\n      var features;\n      if (this.featuresCollection_) {\n        features = this.featuresCollection_.getArray().slice(0);\n      } else if (this.featuresRtree_) {\n        features = this.featuresRtree_.getAll();\n        if (!_isEmpty(this.nullGeometryFeatures_)) {\n          extend(features, Object.values(this.nullGeometryFeatures_));\n        }\n      }\n      return (/** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n        features\n      );\n    }\n\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n  }, {\n    key: \"getFeaturesAtCoordinate\",\n    value: function getFeaturesAtCoordinate(coordinate) {\n      var features = [];\n      this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n        features.push(feature);\n      });\n      return features;\n    }\n\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n     * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n  }, {\n    key: \"getFeaturesInExtent\",\n    value: function getFeaturesInExtent(extent, projection) {\n      var _this5 = this;\n      if (this.featuresRtree_) {\n        var _ref;\n        var multiWorld = projection && projection.canWrapX() && this.getWrapX();\n        if (!multiWorld) {\n          return this.featuresRtree_.getInExtent(extent);\n        }\n        var extents = wrapAndSliceX(extent, projection);\n        return (_ref = []).concat.apply(_ref, _toConsumableArray(extents.map(function (anExtent) {\n          return _this5.featuresRtree_.getInExtent(anExtent);\n        })));\n      } else if (this.featuresCollection_) {\n        return this.featuresCollection_.getArray().slice(0);\n      }\n      return [];\n    }\n\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n  }, {\n    key: \"getClosestFeatureToCoordinate\",\n    value: function getClosestFeatureToCoordinate(coordinate, filter) {\n      // Find the closest feature using branch and bound.  We start searching an\n      // infinite extent, and find the distance from the first feature found.  This\n      // becomes the closest feature.  We then compute a smaller extent which any\n      // closer feature must intersect.  We continue searching with this smaller\n      // extent, trying to find a closer feature.  Every time we find a closer\n      // feature, we update the extent being searched so that any even closer\n      // feature must intersect it.  We continue until we run out of features.\n      var x = coordinate[0];\n      var y = coordinate[1];\n      var closestFeature = null;\n      var closestPoint = [NaN, NaN];\n      var minSquaredDistance = Infinity;\n      var extent = [-Infinity, -Infinity, Infinity, Infinity];\n      filter = filter ? filter : TRUE;\n      this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n      return closestFeature;\n    }\n\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n  }, {\n    key: \"getExtent\",\n    value: function getExtent(extent) {\n      return this.featuresRtree_.getExtent(extent);\n    }\n\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n  }, {\n    key: \"getFeatureById\",\n    value: function getFeatureById(id) {\n      var feature = this.idIndex_[id.toString()];\n      return feature !== undefined ? feature : null;\n    }\n\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n  }, {\n    key: \"getFeatureByUid\",\n    value: function getFeatureByUid(uid) {\n      var feature = this.uidIndex_[uid];\n      return feature !== undefined ? feature : null;\n    }\n\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n  }, {\n    key: \"getFormat\",\n    value: function getFormat() {\n      return this.format_;\n    }\n\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n  }, {\n    key: \"getOverlaps\",\n    value: function getOverlaps() {\n      return this.overlaps_;\n    }\n\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n  }, {\n    key: \"getUrl\",\n    value: function getUrl() {\n      return this.url_;\n    }\n\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n  }, {\n    key: \"handleFeatureChange_\",\n    value: function handleFeatureChange_(event) {\n      var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */\n      event.target;\n      var featureKey = getUid(feature);\n      var geometry = feature.getGeometry();\n      if (!geometry) {\n        if (!(featureKey in this.nullGeometryFeatures_)) {\n          if (this.featuresRtree_) {\n            this.featuresRtree_.remove(feature);\n          }\n          this.nullGeometryFeatures_[featureKey] = feature;\n        }\n      } else {\n        var extent = geometry.getExtent();\n        if (featureKey in this.nullGeometryFeatures_) {\n          delete this.nullGeometryFeatures_[featureKey];\n          if (this.featuresRtree_) {\n            this.featuresRtree_.insert(extent, feature);\n          }\n        } else {\n          if (this.featuresRtree_) {\n            this.featuresRtree_.update(extent, feature);\n          }\n        }\n      }\n      var id = feature.getId();\n      if (id !== undefined) {\n        var sid = id.toString();\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      } else {\n        this.removeFromIdIndex_(feature);\n        this.uidIndex_[featureKey] = feature;\n      }\n      this.changed();\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    }\n\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n  }, {\n    key: \"hasFeature\",\n    value: function hasFeature(feature) {\n      var id = feature.getId();\n      if (id !== undefined) {\n        return id in this.idIndex_;\n      }\n      return getUid(feature) in this.uidIndex_;\n    }\n\n    /**\n     * @return {boolean} Is empty.\n     */\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      if (this.featuresRtree_) {\n        return this.featuresRtree_.isEmpty() && _isEmpty(this.nullGeometryFeatures_);\n      }\n      if (this.featuresCollection_) {\n        return this.featuresCollection_.getLength() === 0;\n      }\n      return true;\n    }\n\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n  }, {\n    key: \"loadFeatures\",\n    value: function loadFeatures(extent, resolution, projection) {\n      var _this6 = this;\n      var loadedExtentsRtree = this.loadedExtentsRtree_;\n      var extentsToLoad = this.strategy_(extent, resolution, projection);\n      var _loop = function _loop() {\n        var extentToLoad = extentsToLoad[i];\n        var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n        if (!alreadyLoaded) {\n          ++_this6.loadingExtentsCount_;\n          _this6.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n          _this6.loader_.call(_this6, extentToLoad, resolution, projection, function (features) {\n            --_this6.loadingExtentsCount_;\n            _this6.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n          }, function () {\n            --_this6.loadingExtentsCount_;\n            _this6.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n          });\n          loadedExtentsRtree.insert(extentToLoad, {\n            extent: extentToLoad.slice()\n          });\n        }\n      };\n      for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n        _loop();\n      }\n      this.loading = this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.clear(true);\n      this.loadedExtentsRtree_.clear();\n      _get(_getPrototypeOf(VectorSource.prototype), \"refresh\", this).call(this);\n    }\n\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n  }, {\n    key: \"removeLoadedExtent\",\n    value: function removeLoadedExtent(extent) {\n      var loadedExtentsRtree = this.loadedExtentsRtree_;\n      var obj;\n      loadedExtentsRtree.forEachInExtent(extent, function (object) {\n        if (equals(object.extent, extent)) {\n          obj = object;\n          return true;\n        }\n      });\n      if (obj) {\n        loadedExtentsRtree.remove(obj);\n      }\n    }\n\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n  }, {\n    key: \"removeFeature\",\n    value: function removeFeature(feature) {\n      if (!feature) {\n        return;\n      }\n      var featureKey = getUid(feature);\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n      }\n      var result = this.removeFeatureInternal(feature);\n      if (result) {\n        this.changed();\n      }\n    }\n\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n  }, {\n    key: \"removeFeatureInternal\",\n    value: function removeFeatureInternal(feature) {\n      var featureKey = getUid(feature);\n      var featureChangeKeys = this.featureChangeKeys_[featureKey];\n      if (!featureChangeKeys) {\n        return;\n      }\n      featureChangeKeys.forEach(unlistenByKey);\n      delete this.featureChangeKeys_[featureKey];\n      var id = feature.getId();\n      if (id !== undefined) {\n        delete this.idIndex_[id.toString()];\n      }\n      delete this.uidIndex_[featureKey];\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n      return feature;\n    }\n\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n  }, {\n    key: \"removeFromIdIndex_\",\n    value: function removeFromIdIndex_(feature) {\n      var removed = false;\n      for (var id in this.idIndex_) {\n        if (this.idIndex_[id] === feature) {\n          delete this.idIndex_[id];\n          removed = true;\n          break;\n        }\n      }\n      return removed;\n    }\n\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n  }, {\n    key: \"setLoader\",\n    value: function setLoader(loader) {\n      this.loader_ = loader;\n    }\n\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n  }, {\n    key: \"setUrl\",\n    value: function setUrl(url) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      this.url_ = url;\n      this.setLoader(xhr(url, this.format_));\n    }\n  }]);\n  return VectorSource;\n}(Source);\nexport default VectorSource;","map":{"version":3,"names":["Collection","CollectionEventType","Event","EventType","ObjectEventType","RBush","Source","VectorEventType","TRUE","VOID","all","allStrategy","assert","containsExtent","equals","wrapAndSliceX","extend","getUid","isEmpty","listen","unlistenByKey","xhr","VectorSourceEvent","_Event","_inherits","_super","_createSuper","type","feature","features","_this","_classCallCheck","call","_createClass","VectorSource","_Source","_super2","options","_this2","attributions","interpolate","projection","undefined","state","wrapX","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","url","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","collection","Array","isArray","getArray","addFeaturesInternal","bindFeaturesCollection_","key","value","addFeature","addFeatureInternal","changed","featureKey","addToIndex_","remove","setupChangeEvents_","geometry","getGeometry","extent","getExtent","insert","dispatchEvent","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","addFeatures","extents","newFeatures","geometryFeatures","i","length","push","load","hasListener","_this3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","element","REMOVE","removeFeature","clear","fast","_this4","featureId","keys","forEach","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","callback","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","slice","getAll","Object","values","getFeaturesAtCoordinate","getFeaturesInExtent","_this5","_ref","multiWorld","canWrapX","getWrapX","getInExtent","concat","apply","_toConsumableArray","map","anExtent","getClosestFeatureToCoordinate","filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","getFeatureById","getFeatureByUid","uid","getFormat","getOverlaps","getUrl","event","target","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","getLength","loadFeatures","resolution","_this6","loadedExtentsRtree","extentsToLoad","_loop","extentToLoad","alreadyLoaded","object","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","ii","loading","refresh","_get","_getPrototypeOf","prototype","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","setUrl"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/source/Vector.js"],"sourcesContent":["/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}