{"ast":null,"code":"import _classCallCheck from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { lineChunk } from '../../geom/flat/linechunk.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1\n};\nvar CanvasTextBuilder = /*#__PURE__*/function (_CanvasBuilder) {\n  _inherits(CanvasTextBuilder, _CanvasBuilder);\n  var _super = _createSuper(CanvasTextBuilder);\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    var _this;\n    _classCallCheck(this, CanvasTextBuilder);\n    _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    _this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    _this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    _this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    _this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    _this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    _this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    _this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */{};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    _this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    _this.declutterImageWithText_ = undefined;\n    return _this;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  _createClass(CanvasTextBuilder, [{\n    key: \"finish\",\n    value: function finish() {\n      var instructions = _get(_getPrototypeOf(CanvasTextBuilder.prototype), \"finish\", this).call(this);\n      instructions.textStates = this.textStates;\n      instructions.fillStates = this.fillStates;\n      instructions.strokeStates = this.strokeStates;\n      return instructions;\n    }\n\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n  }, {\n    key: \"drawText\",\n    value: function drawText(geometry, feature) {\n      var fillState = this.textFillState_;\n      var strokeState = this.textStrokeState_;\n      var textState = this.textState_;\n      if (this.text_ === '' || !textState || !fillState && !strokeState) {\n        return;\n      }\n      var coordinates = this.coordinates;\n      var begin = coordinates.length;\n      var geometryType = geometry.getType();\n      var flatCoordinates = null;\n      var stride = geometry.getStride();\n      if (textState.placement === 'line' && (geometryType == 'LineString' || geometryType == 'MultiLineString' || geometryType == 'Polygon' || geometryType == 'MultiPolygon')) {\n        if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n          return;\n        }\n        var ends;\n        flatCoordinates = geometry.getFlatCoordinates();\n        if (geometryType == 'LineString') {\n          ends = [flatCoordinates.length];\n        } else if (geometryType == 'MultiLineString') {\n          ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */geometry.getEnds();\n        } else if (geometryType == 'Polygon') {\n          ends = /** @type {import(\"../../geom/Polygon.js\").default} */geometry.getEnds().slice(0, 1);\n        } else if (geometryType == 'MultiPolygon') {\n          var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.getEndss();\n          ends = [];\n          for (var i = 0, ii = endss.length; i < ii; ++i) {\n            ends.push(endss[i][0]);\n          }\n        }\n        this.beginGeometry(geometry, feature);\n        var repeat = textState.repeat;\n        var textAlign = repeat ? undefined : textState.textAlign;\n        // No `justify` support for line placement.\n        var flatOffset = 0;\n        for (var o = 0, oo = ends.length; o < oo; ++o) {\n          var chunks = void 0;\n          if (repeat) {\n            chunks = lineChunk(repeat * this.resolution, flatCoordinates, flatOffset, ends[o], stride);\n          } else {\n            chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n          }\n          for (var c = 0, cc = chunks.length; c < cc; ++c) {\n            var chunk = chunks[c];\n            var chunkBegin = 0;\n            var chunkEnd = chunk.length;\n            if (textAlign == undefined) {\n              var range = matchingChunk(textState.maxAngle, chunk, 0, chunk.length, 2);\n              chunkBegin = range[0];\n              chunkEnd = range[1];\n            }\n            for (var _i = chunkBegin; _i < chunkEnd; _i += stride) {\n              coordinates.push(chunk[_i], chunk[_i + 1]);\n            }\n            var end = coordinates.length;\n            flatOffset = ends[o];\n            this.drawChars_(begin, end);\n            begin = end;\n          }\n        }\n        this.endGeometry(feature);\n      } else {\n        var geometryWidths = textState.overflow ? null : [];\n        switch (geometryType) {\n          case 'Point':\n          case 'MultiPoint':\n            flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */geometry.getFlatCoordinates();\n            break;\n          case 'LineString':\n            flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */geometry.getFlatMidpoint();\n            break;\n          case 'Circle':\n            flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */geometry.getCenter();\n            break;\n          case 'MultiLineString':\n            flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */geometry.getFlatMidpoints();\n            stride = 2;\n            break;\n          case 'Polygon':\n            flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */geometry.getFlatInteriorPoint();\n            if (!textState.overflow) {\n              geometryWidths.push(flatCoordinates[2] / this.resolution);\n            }\n            stride = 3;\n            break;\n          case 'MultiPolygon':\n            var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */geometry.getFlatInteriorPoints();\n            flatCoordinates = [];\n            for (var _i2 = 0, _ii = interiorPoints.length; _i2 < _ii; _i2 += 3) {\n              if (!textState.overflow) {\n                geometryWidths.push(interiorPoints[_i2 + 2] / this.resolution);\n              }\n              flatCoordinates.push(interiorPoints[_i2], interiorPoints[_i2 + 1]);\n            }\n            if (flatCoordinates.length === 0) {\n              return;\n            }\n            stride = 2;\n            break;\n          default:\n        }\n        var _end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        if (_end === begin) {\n          return;\n        }\n        if (geometryWidths && (_end - begin) / 2 !== flatCoordinates.length / stride) {\n          var beg = begin / 2;\n          geometryWidths = geometryWidths.filter(function (w, i) {\n            var keep = coordinates[(beg + i) * 2] === flatCoordinates[i * stride] && coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n            if (!keep) {\n              --beg;\n            }\n            return keep;\n          });\n        }\n        this.saveTextStates_();\n        if (textState.backgroundFill || textState.backgroundStroke) {\n          this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n          if (textState.backgroundFill) {\n            this.updateFillStyle(this.state, this.createFill);\n            this.hitDetectionInstructions.push(this.createFill(this.state));\n          }\n          if (textState.backgroundStroke) {\n            this.updateStrokeStyle(this.state, this.applyStroke);\n            this.hitDetectionInstructions.push(this.createStroke(this.state));\n          }\n        }\n        this.beginGeometry(geometry, feature);\n\n        // adjust padding for negative scale\n        var padding = textState.padding;\n        if (padding != defaultPadding && (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n          var p0 = textState.padding[0];\n          var p1 = textState.padding[1];\n          var p2 = textState.padding[2];\n          var p3 = textState.padding[3];\n          if (textState.scale[0] < 0) {\n            p1 = -p1;\n            p3 = -p3;\n          }\n          if (textState.scale[1] < 0) {\n            p0 = -p0;\n            p2 = -p2;\n          }\n          padding = [p0, p1, p2, p3];\n        }\n\n        // The image is unknown at this stage so we pass null; it will be computed at render time.\n        // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n        // render time.\n        var pixelRatio = this.pixelRatio;\n        this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, _end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [1, 1], NaN, undefined, this.declutterImageWithText_, padding == defaultPadding ? defaultPadding : padding.map(function (p) {\n          return p * pixelRatio;\n        }), !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n        var scale = 1 / pixelRatio;\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, _end, null, NaN, NaN, NaN, 1, 0, 0, this.textRotateWithView_, this.textRotation_, [scale, scale], NaN, undefined, this.declutterImageWithText_, padding, !!textState.backgroundFill, !!textState.backgroundStroke, this.text_, this.textKey_, this.strokeKey_, this.fillKey_, this.textOffsetX_, this.textOffsetY_, geometryWidths]);\n        this.endGeometry(feature);\n      }\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"saveTextStates_\",\n    value: function saveTextStates_() {\n      var strokeState = this.textStrokeState_;\n      var textState = this.textState_;\n      var fillState = this.textFillState_;\n      var strokeKey = this.strokeKey_;\n      if (strokeState) {\n        if (!(strokeKey in this.strokeStates)) {\n          this.strokeStates[strokeKey] = {\n            strokeStyle: strokeState.strokeStyle,\n            lineCap: strokeState.lineCap,\n            lineDashOffset: strokeState.lineDashOffset,\n            lineWidth: strokeState.lineWidth,\n            lineJoin: strokeState.lineJoin,\n            miterLimit: strokeState.miterLimit,\n            lineDash: strokeState.lineDash\n          };\n        }\n      }\n      var textKey = this.textKey_;\n      if (!(textKey in this.textStates)) {\n        this.textStates[textKey] = {\n          font: textState.font,\n          textAlign: textState.textAlign || defaultTextAlign,\n          justify: textState.justify,\n          textBaseline: textState.textBaseline || defaultTextBaseline,\n          scale: textState.scale\n        };\n      }\n      var fillKey = this.fillKey_;\n      if (fillState) {\n        if (!(fillKey in this.fillStates)) {\n          this.fillStates[fillKey] = {\n            fillStyle: fillState.fillStyle\n          };\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n  }, {\n    key: \"drawChars_\",\n    value: function drawChars_(begin, end) {\n      var strokeState = this.textStrokeState_;\n      var textState = this.textState_;\n      var strokeKey = this.strokeKey_;\n      var textKey = this.textKey_;\n      var fillKey = this.fillKey_;\n      this.saveTextStates_();\n      var pixelRatio = this.pixelRatio;\n      var baseline = TEXT_ALIGN[textState.textBaseline];\n      var offsetY = this.textOffsetY_ * pixelRatio;\n      var text = this.text_;\n      var strokeWidth = strokeState ? strokeState.lineWidth * Math.abs(textState.scale[0]) / 2 : 0;\n      this.instructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, pixelRatio, offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1]);\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS, begin, end, baseline, textState.overflow, fillKey, textState.maxAngle, 1, offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio]);\n    }\n\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [sharedData] Shared data.\n     */\n  }, {\n    key: \"setTextStyle\",\n    value: function setTextStyle(textStyle, sharedData) {\n      var textState, fillState, strokeState;\n      if (!textStyle) {\n        this.text_ = '';\n      } else {\n        var textFillStyle = textStyle.getFill();\n        if (!textFillStyle) {\n          fillState = null;\n          this.textFillState_ = fillState;\n        } else {\n          fillState = this.textFillState_;\n          if (!fillState) {\n            fillState = /** @type {import(\"../canvas.js\").FillState} */{};\n            this.textFillState_ = fillState;\n          }\n          fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n        }\n        var textStrokeStyle = textStyle.getStroke();\n        if (!textStrokeStyle) {\n          strokeState = null;\n          this.textStrokeState_ = strokeState;\n        } else {\n          strokeState = this.textStrokeState_;\n          if (!strokeState) {\n            strokeState = /** @type {import(\"../canvas.js\").StrokeState} */{};\n            this.textStrokeState_ = strokeState;\n          }\n          var lineDash = textStrokeStyle.getLineDash();\n          var lineDashOffset = textStrokeStyle.getLineDashOffset();\n          var lineWidth = textStrokeStyle.getWidth();\n          var miterLimit = textStrokeStyle.getMiterLimit();\n          strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n          strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n          strokeState.lineDashOffset = lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n          strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n          strokeState.lineWidth = lineWidth === undefined ? defaultLineWidth : lineWidth;\n          strokeState.miterLimit = miterLimit === undefined ? defaultMiterLimit : miterLimit;\n          strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n        }\n        textState = this.textState_;\n        var font = textStyle.getFont() || defaultFont;\n        registerFont(font);\n        var textScale = textStyle.getScaleArray();\n        textState.overflow = textStyle.getOverflow();\n        textState.font = font;\n        textState.maxAngle = textStyle.getMaxAngle();\n        textState.placement = textStyle.getPlacement();\n        textState.textAlign = textStyle.getTextAlign();\n        textState.repeat = textStyle.getRepeat();\n        textState.justify = textStyle.getJustify();\n        textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n        textState.backgroundFill = textStyle.getBackgroundFill();\n        textState.backgroundStroke = textStyle.getBackgroundStroke();\n        textState.padding = textStyle.getPadding() || defaultPadding;\n        textState.scale = textScale === undefined ? [1, 1] : textScale;\n        var textOffsetX = textStyle.getOffsetX();\n        var textOffsetY = textStyle.getOffsetY();\n        var textRotateWithView = textStyle.getRotateWithView();\n        var textRotation = textStyle.getRotation();\n        this.text_ = textStyle.getText() || '';\n        this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n        this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n        this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n        this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n        this.strokeKey_ = strokeState ? (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) + strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth + strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' : '';\n        this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?') + (textState.repeat || '?') + (textState.justify || '?') + (textState.textBaseline || '?');\n        this.fillKey_ = fillState ? typeof fillState.fillStyle == 'string' ? fillState.fillStyle : '|' + getUid(fillState.fillStyle) : '';\n      }\n      this.declutterImageWithText_ = sharedData;\n    }\n  }]);\n  return CanvasTextBuilder;\n}(CanvasBuilder);\nexport default CanvasTextBuilder;","map":{"version":3,"names":["CanvasBuilder","CanvasInstruction","asColorLike","defaultFillStyle","defaultFont","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultLineWidth","defaultMiterLimit","defaultPadding","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","registerFont","getUid","intersects","lineChunk","matchingChunk","TEXT_ALIGN","CanvasTextBuilder","_CanvasBuilder","_inherits","_super","_createSuper","tolerance","maxExtent","resolution","pixelRatio","_this","_classCallCheck","call","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","undefined","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","declutterImageWithText_","_createClass","key","value","finish","instructions","_get","_getPrototypeOf","prototype","drawText","geometry","feature","fillState","strokeState","textState","coordinates","begin","length","geometryType","getType","flatCoordinates","stride","getStride","placement","getBufferedMaxExtent","getExtent","ends","getFlatCoordinates","getEnds","slice","endss","getEndss","i","ii","push","beginGeometry","repeat","textAlign","flatOffset","o","oo","chunks","c","cc","chunk","chunkBegin","chunkEnd","range","maxAngle","end","drawChars_","endGeometry","geometryWidths","overflow","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","appendFlatPointCoordinates","beg","filter","w","keep","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","updateFillStyle","state","createFill","hitDetectionInstructions","updateStrokeStyle","applyStroke","createStroke","padding","scale","p0","p1","p2","p3","DRAW_IMAGE","NaN","map","p","strokeKey","strokeStyle","lineCap","lineDashOffset","lineWidth","lineJoin","miterLimit","lineDash","textKey","font","justify","textBaseline","fillKey","fillStyle","baseline","offsetY","text","strokeWidth","Math","abs","DRAW_CHARS","setTextStyle","textStyle","sharedData","textFillStyle","getFill","getColor","textStrokeStyle","getStroke","getLineDash","getLineDashOffset","getWidth","getMiterLimit","getLineCap","getLineJoin","getFont","textScale","getScaleArray","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","getRotateWithView","textRotation","getRotation","getText","join"],"sources":["/home/jay/Downloads/major/my-app/gis/web-gis/node_modules/ol/render/canvas/TextBuilder.js"],"sourcesContent":["/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}